
/*////////////////////////////////////////////////////////////////////*/
/*////////////////////////////////////////////////////////////////////*/
/* Snackbar toggle box */
#snackbar {

    min-width: 250px;
    background-color: #333;
    color: #fff;
    
    position: fixed;
    left: 50%;
    bottom: 30px;
    margin-left: -125px;

    padding: 16px;
    text-align: center;
    border-radius: 2px;

    visibility: hidden;
    
}

#snackbar.show {
    visibility: visible;

    -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s; /*!!*/
    animation: fadein 0.5s, fadeout 0.5s 2.5s;
    animation-fill-mode: forwards;

}


@keyframes fadein {                                     /*!!*/
    from {  bottom: 0;      opacity: 0;   }
    to   {  bottom: 30px;   opacity: 1;   }
}

@keyframes fadeout {
    from {  bottom: 30px;      opacity: 1;   }
    to   {  bottom: 0;         opacity: 0;   }
}

@-webkit-keyframes fadeout {
    from {bottom: 30px; opacity: 1;}
    to {bottom: 0; opacity: 0;}
}
  
  @-webkit-keyframes fadein {
    from {bottom: 0; opacity: 0;}
    to {bottom: 30px; opacity: 1;}
}
  

/*////////////////////////////////////////////////////////////////////*/
/*////////////////////////////////////////////////////////////////////*/
/* scroll values with JS */

.testdiv_date.main { 
    height: 500px; 
    width: 200px; 
    background-color: lightblue; 
    display: flex; 
    flex-wrap: wrap;
    justify-content: center; 
    align-items: center; 
    overflow: scroll; /* needed for scroll */

} 

.testdiv_date.sub { 
    height: 300px; 
    width: 200px; 
}


/*////////////////////////////////////////////////////////////////////*/
/* Using Gradient property to make Gradient body on scroll */

body {

/*  background: linear-gradient(141deg, #0fb8ad 0%, #1fc8db 51%, #2cb5e8 75%);
    /*angle, starting color, middle color, ending color (starts at 75%) */

    /*
    background: repeating-linear-gradient(90deg, blue 0, blue 40px, white 40px, white 80px );
*/                                      /* 45 degrees, px 0-40 blue, px 40-80 white, repeat make that 45 degrees*/
                                        
    /* can make repeating gradient */
    /* can make colors start-end from */                                    
}

html {
    scroll-behavior: smooth; /* makes the scoll in page more smooth */

    overflow: hidden; /* hide all scroll bars */
    overflow-y: hidden; /* hide vertical scroll bar */
    overflow: scroll; /* always show scroll bar*/
}

.scroll_contain {

/*    The CSS overflow property controls what happens to content 
    that is too big to fit into a block element with specified height */
    /*overflow: visible; /*no clip, content out of box */
    /*overflow: hidden;  /* clip content */
    /* overflow: scroll;  /* content contained inside box and scroll is added */
    overflow: auto !important;  /* like scroll but bar only when needed */

}





::placeholder {
    color: red; /* change the input background color */
    opacity: 1; /* firefox adds by default opacity to input section */
    background-color: blue;
  }


/*////////////////////////////////////////////////////////////////////*/
/* custom scrollbar */

/*
::-webkit-scrollbar {
    width: 10px;
}

::-webkit-scrollbar-button {
    background: red;

}

::-webkit-scrollbar-thumb {
    background: blue;
    border-radius: 10px;

}

::-webkit-scrollbar-thumb:hover {
    background: cyan;
}
::-webkit-scrollbar-track {
    background: white;
    box-shadow: inset 0 0 5px gray;

}

::-webkit-scrollbar-track-piece {

}

::-webkit-scrollbar-corner {
    background: white;

}

::-webkit-resizer {
    background: fuchsia;
}
*/



/*////////////////////////////////////////////////////////////////////*/
/* layers */
/* 
intentionally cascading systems
in design systems ,themes, defaults, 
less important than unlayered styles

can name or group layers

help with specificity issues

* { 
 has no priority but overlaps all user styles
}


*/

/*declaration for priority setting, must be before the layers
preferable to be put on top of css code even before @import */
@layer layer2, layer1;
@layer layer1, layer2;
/*second declaration orders do not overlap the first, layer 1 still higher priority */

@layer reset.type, default.type, reset.media, default.media;
        /* ordering sub layers globaly because they follow the order priority unsub-layered, last is highest */

@import url('example.css') layer (<layer-name>);
/* import a specific layer from a css file */

/* layer1 wins even if not last written because last written in layer priority 
even though in the layers it should be least because it has not been written last */
/* anywhere !important is put layers reverse the order to important layer(least powerful), important layer(more important), important unlayer */

/* un layered wins
/* important any layer reverses the order
/* if last in layers declaration then if last in separate declarations

/* this priority scheme allows to add styles anywhere in the document without changing priority



/* order low-high specifity */


@layer layer1 {

    @layer layer11, layer12;

    .testdiv_date.sub {
        background: green !important;
        /*cant put charset, imports, and namespaces.*/
    }

        @layer11 {

        }

}
                    /* sub layers access */
@layer layer1.layer11 {
        /* access a sub layer from outside the parent layer */
}


@layer layer2 {

    .testdiv_date.sub {
        background: blue ;
    }
    

}


/* unlayered style
.testdiv_date.sub { 
    background: gray;

}
*/ 

/*
Anonymous layers
@ layer {} or import url('') layer;
order is where its encountered, cannot be sorted or appended
*/

/*////////////////////////////////////////////////////////////////////*/


.main2 {
    background: url('https://images.unsplash.com/photo-1546587348-d12660c30c50?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8N3x8bmF0dXJhbHxlbnwwfHwwfHw%3D&w=1000&q=80') 50%;
    height: 500px;
}


.BG_div {
    width: 100%;
    height: 300px;
    background: rgb(215, 185, 255);

    display: flex;

    mix-blend-mode: multiply; /* affects child to be transparent to main background */

/*    position: fixed; */


}   


.mix_div {
    color: rgb(255, 255, 255);
    float: right;
    background: rgba(0, 0, 0, 0.475);

    margin: auto;

    height: 2em;
    width: 4em;

    font-size: 50px;
    font-weight: 600;
    text-align: center;

    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%);

/*  mix-blend-mode: multiply; /* in a child, it takes the whites, keeps the blacks*/
/*  mix-blend-mode: screen; /*takes the black, keeps the lighter pixels*/
/*    mix-blend-mode: overlay; /* plays with contrast brighter whites, darker blacks */
/*    mix-blend-mode: difference; */
    
/* you can actually have a transparent to background even if inside a div 
even when fixed !
use mix on div and mix on text*/

}



/* mix-blend test 2: using ::after and blending with the base layer*/
/*
.main2 { 
    position: relative;
    z-index: 1;

    /*isolation: isolate; /* same as relative/z1 */
    /*called stacking context i.e psdo element cannot escape the element to behind 
    if put in BD_div, the BG_div will become its own bubble and will have nothing to blend with */
}
/*
.BG_div {
    position: relative;
    background: none;

}

.BG_div::after {
    content: ' ';
    position: absolute;
    background: #ff0464;
    inset: 0; /* all sides 0 */
/*
    z-index: -1; /* combined with main (because its the main color/image)
     z-index1 lets after show and content in the same time, stacking */
/*
    mix-blend-mode: multiply;
}
*/




.blend_div {
  background-image:url('https://images.unsplash.com/photo-1500534623283-312aade485b7?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80');
  background-position:0 54%;
  padding:40px;
}

#blend_h1 {
  mix-blend-mode:normal;
  color:rgb(36, 0, 238);
  font-size:80px;
}



/*////////////////////////////////////////////////////////////////////*/
/*spotlight*/

    .spot_container {
        background: black;
        color: #23424A;       
    }


    .animate {

        background: #38CFD9;
        height: 200px;
        width: 200px;
        border-radius: 50%;

        animation: floatAnim 3s linear forwards infinite alternate;

    }

    @keyframes floatAnim {
        100% {
          transform: translateX(20vw);
        }
      }
      

    .text-icon {
        mix-blend-mode: darken;
        position: relative;
        bottom: 100px;
        left: 20%;
        color: blue;

    }


    /* using darken on the H1 will let the black take the color
    however when another color passes over it the blend colors are changed so it appears */

/*////////////////////////////////////////////////////////////////////*/


/*
css create mask layer, place over element
fully or partially hide portions
for svg put in url


*/
.mask1 {
/*    -webkit-mask-image: url('w3logo.png');
    mask-image: url('w3logo.png');
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;    */
/*
    -webkit-mask-image: linear-gradient(black, transparent);
    mask-image: linear-gradient(black, transparent);
*/


-webkit-mask-image: radial-gradient(circle, black 50%, rgba(0, 0, 0, 0.5) 50%);


  }

/*
mask-mode: mask layer image lumiance or alpha
mask-origin: origin/mask position
mask-position: starting mask position
mask-repeat: 
mask-size: 


/*


/*////////////////////////////////////////////////////////////////////*/
/* text effect : mix blend mode with filter difference */
.div02_09 {

    background-image:url('https://images.unsplash.com/photo-1500534623283-312aade485b7?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80');
    background-position:0 50%;

    width: 300px;
    height: 300px;

    padding-top: 52%;

    filter:grayscale(20%) invert(80%);
    
    position: relative;
    z-index: 3;  
}


.div02_09 h1 {
    
    color:black;
    font-size:40px;

    mix-blend-mode: difference; /**/
    filter:invert(100%); /**/

    position: absolute;
}

            /*effect on hover */
            .div02_09_sub {

                background-position:0 50%;
                background: black;
                height: 100px;
                width: 100px;

                position: absolute;
                z-index: 5;
            }

            .div02_09_sub:hover {
                filter:invert(50%);
                transition:all 1s ease-in;
                z-index:1;
                mix-blend-mode: multiply;

            }


/*////////////////////////////////////////////////////////////////////*/
/* remove white/black background using multiply and contrast */
.div02_09_2 {
    background-image:url('https://images.unsplash.com/photo-1500534623283-312aade485b7?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80');
    background-position:0 50%;

    width: 300px;
    height: 300px;

}

.div02_09_2_sub {
    background-image:url('https://lever-client-logos.s3.amazonaws.com/6b17474a-d642-400b-90c8-a83f54bf1901-1569347597723.png');
    background-size: contain;
    background-repeat: no-repeat;


    filter: contrast(1);
    mix-blend-mode: multiply;
    width: 150px;
    height: 150px;

}

.div02_09_2_sub_2 {
    background-image:url('https://thumbs.dreamstime.com/b/angry-roaring-black-white-lion-head-vector-logo-design-illustration-angry-roaring-black-white-lion-head-vector-logo-design-125307141.jpg');
    background-size: contain;
    background-repeat: no-repeat;


    filter: contrast(1);
    mix-blend-mode: screen;
    width: 150px;
    height: 150px;

}


/*////////////////////////////////////////////////////////////////////*/


.scroll_animation {
    height: 300px;
    width: 500px;
    background-color: #23424A;
}

.fade-in {  /* show */

    opacity: 0;
    transition: opacity 250ms ease-in;

}

.fade-in.appear {
    opacity: 1;
}

.from-left { /* start -50x */
    transform: translateX(-50%);
    transition:  transform 700ms ease-in;
}

.from-left.appear { /* when show, got to 0x */
    transform: translateX(0);
}
